stages:
  - baseimage
  - modules
  - build
  - deploy

build baseimage:
    stage: baseimage
    script:
      - docker build --cache-from $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:baseimage --pull --target baseimage -f docker/Dockerfile -t $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:baseimage .
      - docker push $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:baseimage
    
modules:
    image: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:baseimage
    stage: modules
    cache:
      key: "$CI_COMMIT_REF_NAME"
      paths:
        - node_modules/
    script:
      - npm install
    
build:
    stage: build
    cache:
      key: "$CI_COMMIT_REF_NAME"
      policy: pull
      paths:
        - node_modules/
    image: docker.reg.ru/effectcom/devops
    script:
      - /vars.sh
      - . /tmp/vars
      - echo "BASE_DOMAIN=$BASE_DOMAIN"
      - echo "VUE_APP_ENV=$VUE_APP_ENV"
      - docker build --build-arg NODE_ENV=production --build-arg VUE_APP_IS_DOCKER=true --build-arg VUE_APP_API_SERVER=https://api.$BASE_DOMAIN/ --build-arg VUE_APP_POLLING_SERVER=//polling.$BASE_DOMAIN --build-arg VUE_APP_POLLING_INTERVAL_MS=5000 --build-arg VUE_APP_ENV=$VUE_APP_ENV --pull --cache-from $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:baseimage -f docker/Dockerfile -t $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:$CI_PIPELINE_ID .
      - docker push $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:$CI_PIPELINE_ID

deploy:
    stage: deploy
    image: docker.reg.ru/effectcom/devops
    script:
      - /deploy.sh oi $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:$CI_PIPELINE_ID
